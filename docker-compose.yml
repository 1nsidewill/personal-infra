services:
  # Traefik - Reverse Proxy (SSL Reuse)
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # SSL 설정 (기존 인증서 재사용, 새로 발급 안함)
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@example.com}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.keytype=EC256
      # HTTP redirect to HTTPS
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --log.level=INFO
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik:/letsencrypt
      - ./docker/traefik/dynamic:/etc/traefik/dynamic:ro
    networks:
      - web

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - web

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    networks:
      - web

  # Nextcloud
  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - REDIS_HOST=redis
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER:-admin}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD:-changeme}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_DOMAIN:-localhost}
      - TRUSTED_PROXIES=172.16.0.0/12 10.0.0.0/8 192.168.0.0/16
      - OVERWRITEPROTOCOL=https
      - OVERWRITEHOST=${NEXTCLOUD_DOMAIN:-localhost}
      - OVERWRITEWEBROOT=
      - OVERWRITE_CLI_URL=https://${NEXTCLOUD_DOMAIN:-localhost}
    volumes:
      - ./data/nextcloud:/var/www/html
      - ./nas/storage:/var/www/html/data/storage:rw
      - ./nas/smb:/var/www/html/data/smb:rw
    labels:
      - "traefik.enable=true"
      # HTTP (redirect to HTTPS)
      - "traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_DOMAIN:-localhost}`)"
      - "traefik.http.routers.nextcloud.entrypoints=web"
      # HTTPS (use existing certificate)
      - "traefik.http.routers.nextcloud-secure.rule=Host(`${NEXTCLOUD_DOMAIN:-localhost}`)"
      - "traefik.http.routers.nextcloud-secure.entrypoints=websecure"
      - "traefik.http.routers.nextcloud-secure.tls=true"
      - "traefik.http.routers.nextcloud-secure.tls.certresolver=letsencrypt"
      # 보안 헤더 미들웨어 적용
      - "traefik.http.routers.nextcloud-secure.middlewares=nextcloud-redirectregex@docker,security-headers@file"
      # CalDAV/CardDAV redirects
      - "traefik.http.middlewares.nextcloud-redirectregex.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud-redirectregex.redirectregex.regex=https://(.*)/.well-known/(?:card|cal)dav"
      - "traefik.http.middlewares.nextcloud-redirectregex.redirectregex.replacement=https://$${1}/remote.php/dav"
    networks:
      - web
    depends_on:
      - postgres
      - redis

networks:
  web:
    external: true 